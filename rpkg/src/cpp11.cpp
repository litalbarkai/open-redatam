// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// read_dic.cpp
list read_dic_(const std::string& filepath);
extern "C" SEXP _redatam_read_dic_(SEXP filepath) {
  BEGIN_CPP11
    return cpp11::as_sexp(read_dic_(cpp11::as_cpp<cpp11::decay_t<const std::string&>>(filepath)));
  END_CPP11
}
// read_ptr_rbf.cpp
SEXP print_rbf_paths_with_logging(const std::string& path, const std::vector<std::string>& rbf_paths, const std::string& entityName, const std::string& parentName);
extern "C" SEXP _redatam_print_rbf_paths_with_logging(SEXP path, SEXP rbf_paths, SEXP entityName, SEXP parentName) {
  BEGIN_CPP11
    return cpp11::as_sexp(print_rbf_paths_with_logging(cpp11::as_cpp<cpp11::decay_t<const std::string&>>(path), cpp11::as_cpp<cpp11::decay_t<const std::vector<std::string>&>>(rbf_paths), cpp11::as_cpp<cpp11::decay_t<const std::string&>>(entityName), cpp11::as_cpp<cpp11::decay_t<const std::string&>>(parentName)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_redatam_print_rbf_paths_with_logging", (DL_FUNC) &_redatam_print_rbf_paths_with_logging, 4},
    {"_redatam_read_dic_",                    (DL_FUNC) &_redatam_read_dic_,                    1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_redatam(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
